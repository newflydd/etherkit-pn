/*
    '.h' file Generated by NetPort Software MIB Compiler
    Copyright 1993 by NetPort Software
*/
/*****************************************************************************/
/** Copyright 1990-96 by NetPort Software. All rights reserved.              */
/** Copyright 1996-2004 By InterNiche Technologies Inc. All rights reserved. */
/*  Copyright (C) 2020 Siemens Aktiengesellschaft. All rights reserved.      */
/*****************************************************************************/
/*  This program is protected by German copyright law and international      */
/*  treaties. The use of this software including but not limited to its      */
/*  Source Code is subject to restrictions as agreed in the license          */
/*  agreement between you and Siemens.                                       */
/*  Copying or distribution is not allowed unless expressly permitted        */
/*  according to your license agreement with Siemens.                        */
/*****************************************************************************/
/*                                                                           */
/*  P r o j e c t         &P: PROFINET IO Runtime Software              :P&  */
/*                                                                           */
/*  P a c k a g e         &W: PROFINET IO Runtime Software              :W&  */
/*                                                                           */
/*  C o m p o n e n t     &C: OHA (Option HAndler)                      :C&  */
/*                                                                           */
/*  F i l e               &F: oha_mibs.h                                :F&  */
/*                                                                           */
/*  V e r s i o n         &V: BC_PNRUN_P07.02.00.00_00.02.00.20         :V&  */
/*                                                                           */
/*  D a t e  (YYYY-MM-DD) &D: 2020-09-21                                :D&  */
/*                                                                           */
/*****************************************************************************/
/*                                                                           */
/*  D e s c r i p t i o n:  OHA SNMP-Agent functions                         */
/*                                                                           */
/*****************************************************************************/
/*                                                                           */
/*  H i s t o r y :                                                          */
/*  ________________________________________________________________________ */
/*                                                                           */
/*  Date        Who   What                                                   */
/*  20.07.04    VE    initial version.                                       */
/*****************************************************************************/

#ifndef LLDP_MIB_H
#define LLDP_MIB_H


/* The following structure is the iface MIB from rfc1213. Most fields are
 * simple counters and are used as such by the InterNiche networking code.
 * Two exceptions are ifAdminStatus and ifOperStatus. We have tried to
 * keep their use consistent with the RFC.
 *    When an interface (NET) is created, it is marked down (i.e. the
 * ifAdminStatus is set to the "down" position) so that it can safely
 * be configured (a separate step), and then marked "up" once
 * configuration is complete. A NET with ifAdminStatus==DOWN will
 * not be used to send by the inet code.
 *    ifOperStatus should indicate the actual state of the link. For
 * ethernet this probably means UP almost all the time. For PPP it means
 * UP when connected, DOWN other wise; thus a modem in AUTOANSWER would
 * have the same ifAdminStatus and ifOperStatus (UP, DOWN) as a
 * disconnected modem.
 */

/* Tokens for passing to "var_" routines. These can
serve as offsets into the generated MIB group tables.
*/

/* tokens for 'lldpConfiguration' group */
#define LLDPMESSAGETXINTERVAL   0
#define LLDPMESSAGETXHOLDMULTIPLIER LLDPMESSAGETXINTERVAL+4
#define LLDPREINITDELAY LLDPMESSAGETXHOLDMULTIPLIER+4
#define LLDPTXDELAY LLDPREINITDELAY+4
#define LLDPNOTIFICATIONINTERVAL    LLDPTXDELAY+4

/* tokens for 'lldpPortConfigEntry' group */
#define LLDPPORTCONFIGPORTNUM   0
#define LLDPPORTCONFIGADMINSTATUS   LLDPPORTCONFIGPORTNUM+4
#define LLDPPORTCONFIGNOTIFICATIONENABLE    LLDPPORTCONFIGADMINSTATUS+4
#define LLDPPORTCONFIGTLVSTXENABLE  LLDPPORTCONFIGNOTIFICATIONENABLE+4

/* tokens for 'lldpConfigManAddrEntry' group */
#define LLDPCONFIGMANADDRPORTSTXENABLE  0

/* tokens for 'lldpStatistics' group */
#define LLDPSTATSREMTABLESLASTCHANGETIME    0
#define LLDPSTATSREMTABLESINSERTS   LLDPSTATSREMTABLESLASTCHANGETIME+4
#define LLDPSTATSREMTABLESDELETES   LLDPSTATSREMTABLESINSERTS+4
#define LLDPSTATSREMTABLESDROPS LLDPSTATSREMTABLESDELETES+4
#define LLDPSTATSREMTABLESAGEOUTS   LLDPSTATSREMTABLESDROPS+4

/* tokens for 'lldpStatsTxPortEntry' group */
#define LLDPSTATSTXPORTNUM  0
#define LLDPSTATSTXPORTFRAMESTOTAL  LLDPSTATSTXPORTNUM+4

/* tokens for 'lldpStatsRxPortEntry' group */
#define LLDPSTATSRXPORTNUM  0
#define LLDPSTATSRXPORTFRAMESDISCARDEDTOTAL LLDPSTATSRXPORTNUM+4
#define LLDPSTATSRXPORTFRAMESERRORS LLDPSTATSRXPORTFRAMESDISCARDEDTOTAL+4
#define LLDPSTATSRXPORTFRAMESTOTAL  LLDPSTATSRXPORTFRAMESERRORS+4
#define LLDPSTATSRXPORTTLVSDISCARDEDTOTAL   LLDPSTATSRXPORTFRAMESTOTAL+4
#define LLDPSTATSRXPORTTLVSUNRECOGNIZEDTOTAL    LLDPSTATSRXPORTTLVSDISCARDEDTOTAL+4
#define LLDPSTATSRXPORTAGEOUTSTOTAL LLDPSTATSRXPORTTLVSUNRECOGNIZEDTOTAL+4

/* tokens for 'lldpLocalSystemData' group */
#define LLDPLOCCHASSISIDSUBTYPE 0
#define LLDPLOCCHASSISID    LLDPLOCCHASSISIDSUBTYPE+4
#define LLDPLOCSYSNAME  LLDPLOCCHASSISID+4
#define LLDPLOCSYSDESC  LLDPLOCSYSNAME+4
#define LLDPLOCSYSCAPSUPPORTED  LLDPLOCSYSDESC+4
#define LLDPLOCSYSCAPENABLED    LLDPLOCSYSCAPSUPPORTED+4

/* tokens for 'lldpLocPortEntry' group */
#define LLDPLOCPORTNUM  0
#define LLDPLOCPORTIDSUBTYPE    LLDPLOCPORTNUM+4
#define LLDPLOCPORTID   LLDPLOCPORTIDSUBTYPE+4
#define LLDPLOCPORTDESC LLDPLOCPORTID+4

/* tokens for 'lldpLocManAddrEntry' group */
#define LLDPLOCMANADDRSUBTYPE   0
#define LLDPLOCMANADDR  LLDPLOCMANADDRSUBTYPE+4
#define LLDPLOCMANADDRLEN   LLDPLOCMANADDR+4
#define LLDPLOCMANADDRIFSUBTYPE LLDPLOCMANADDRLEN+4
#define LLDPLOCMANADDRIFID  LLDPLOCMANADDRIFSUBTYPE+4
#define LLDPLOCMANADDROID   LLDPLOCMANADDRIFID+4

/* tokens for 'lldpRemEntry' group */
#define LLDPREMTIMEMARK 0
#define LLDPREMLOCALPORTNUM LLDPREMTIMEMARK+4
#define LLDPREMINDEX    LLDPREMLOCALPORTNUM+4
#define LLDPREMCHASSISIDSUBTYPE LLDPREMINDEX+4
#define LLDPREMCHASSISID    LLDPREMCHASSISIDSUBTYPE+4
#define LLDPREMPORTIDSUBTYPE    LLDPREMCHASSISID+4
#define LLDPREMPORTID   LLDPREMPORTIDSUBTYPE+4
#define LLDPREMPORTDESC LLDPREMPORTID+4
#define LLDPREMSYSNAME  LLDPREMPORTDESC+4
#define LLDPREMSYSDESC  LLDPREMSYSNAME+4
#define LLDPREMSYSCAPSUPPORTED  LLDPREMSYSDESC+4
#define LLDPREMSYSCAPENABLED    LLDPREMSYSCAPSUPPORTED+4

/* tokens for 'lldpRemManAddrEntry' group */
#define LLDPREMMANADDRSUBTYPE   0
#define LLDPREMMANADDR  LLDPREMMANADDRSUBTYPE+4
#define LLDPREMMANADDRIFSUBTYPE LLDPREMMANADDR+4
#define LLDPREMMANADDRIFID  LLDPREMMANADDRIFSUBTYPE+4
#define LLDPREMMANADDROID   LLDPREMMANADDRIFID+4

/* tokens for 'lldpRemUnknownTLVEntry' group */
#define LLDPREMUNKNOWNTLVTYPE   0
#define LLDPREMUNKNOWNTLVINFO   LLDPREMUNKNOWNTLVTYPE+4

/* tokens for 'lldpRemOrgDefInfoEntry' group */
#define LLDPREMORGDEFINFOOUI    0
#define LLDPREMORGDEFINFOSUBTYPE    LLDPREMORGDEFINFOOUI+4
#define LLDPREMORGDEFINFOINDEX  LLDPREMORGDEFINFOSUBTYPE+4
#define LLDPREMORGDEFINFO   LLDPREMORGDEFINFOINDEX+4

/* tokens for 'lldpXPnoConfigSPDEntry' group */
#define LLDPXPNOCONFIGSPDTXENABLE   0
#define LLDPXPNOCONFIGPORTSTATUSTXENABLE    LLDPXPNOCONFIGSPDTXENABLE+4
#define LLDPXPNOCONFIGALIASTXENABLE LLDPXPNOCONFIGPORTSTATUSTXENABLE+4
#define LLDPXPNOCONFIGMRPTXENABLE   LLDPXPNOCONFIGALIASTXENABLE+4
#define LLDPXPNOCONFIGPTCPTXENABLE  LLDPXPNOCONFIGMRPTXENABLE+4

/* tokens for 'lldpXPnoLocEntry' group */
#define LLDPXPNOLOCLPDVALUE 0
#define LLDPXPNOLOCPORTTXDVALUE LLDPXPNOLOCLPDVALUE+4
#define LLDPXPNOLOCPORTRXDVALUE LLDPXPNOLOCPORTTXDVALUE+4
#define LLDPXPNOLOCPORTSTATUSRT2    LLDPXPNOLOCPORTRXDVALUE+4
#define LLDPXPNOLOCPORTSTATUSRT3    LLDPXPNOLOCPORTSTATUSRT2+4
#define LLDPXPNOLOCPORTNOS  LLDPXPNOLOCPORTSTATUSRT3+4
#define LLDPXPNOLOCPORTMRPUUID  LLDPXPNOLOCPORTNOS+4
#define LLDPXPNOLOCPORTMRRTSTATUS   LLDPXPNOLOCPORTMRPUUID+4
#define LLDPXPNOLOCPORTPTCPMASTER   LLDPXPNOLOCPORTMRRTSTATUS+4
#define LLDPXPNOLOCPORTPTCPSUBDOMAINUUID    LLDPXPNOLOCPORTPTCPMASTER+4
#define LLDPXPNOLOCPORTPTCPIRDATAUUID   LLDPXPNOLOCPORTPTCPSUBDOMAINUUID+4
#define LLDPXPNOLOCPORTMODERT3  LLDPXPNOLOCPORTPTCPIRDATAUUID+4
#define LLDPXPNOLOCPORTPERIODLENGTH LLDPXPNOLOCPORTMODERT3+4
#define LLDPXPNOLOCPORTPERIODVALIDITY   LLDPXPNOLOCPORTPERIODLENGTH+4
#define LLDPXPNOLOCPORTREDOFFSET    LLDPXPNOLOCPORTPERIODVALIDITY+4
#define LLDPXPNOLOCPORTREDVALIDITY  LLDPXPNOLOCPORTREDOFFSET+4
#define LLDPXPNOLOCPORTORANGEOFFSET LLDPXPNOLOCPORTREDVALIDITY+4
#define LLDPXPNOLOCPORTORANGEVALIDITY   LLDPXPNOLOCPORTORANGEOFFSET+4
#define LLDPXPNOLOCPORTGREENOFFSET  LLDPXPNOLOCPORTORANGEVALIDITY+4
#define LLDPXPNOLOCPORTGREENVALIDITY    LLDPXPNOLOCPORTGREENOFFSET+4
#define LLDPXPNOLOCPORTSTATUSRT3OPTIMIZATIONSUPPORTED	LLDPXPNOLOCPORTGREENVALIDITY+4
#define LLDPXPNOLOCPORTSTATUSRT3PREAMBLESHORTENINGSUPPORTED	LLDPXPNOLOCPORTSTATUSRT3OPTIMIZATIONSUPPORTED+4
#define LLDPXPNOLOCPORTSTATUSRT3PREAMBLESHORTENING	LLDPXPNOLOCPORTSTATUSRT3PREAMBLESHORTENINGSUPPORTED+4
#define LLDPXPNOLOCPORTSTATUSRT3FRAGMENTATIONSUPPORTED	LLDPXPNOLOCPORTSTATUSRT3PREAMBLESHORTENING+4
#define LLDPXPNOLOCPORTSTATUSRT3FRAGMENTATION	LLDPXPNOLOCPORTSTATUSRT3FRAGMENTATIONSUPPORTED+4

/* tokens for 'lldpXPnoRemEntry' group */
#define LLDPXPNOREMLPDVALUE 0
#define LLDPXPNOREMPORTTXDVALUE LLDPXPNOREMLPDVALUE+4
#define LLDPXPNOREMPORTRXDVALUE LLDPXPNOREMPORTTXDVALUE+4
#define LLDPXPNOREMPORTSTATUSRT2    LLDPXPNOREMPORTRXDVALUE+4
#define LLDPXPNOREMPORTSTATUSRT3    LLDPXPNOREMPORTSTATUSRT2+4
#define LLDPXPNOREMPORTNOS  LLDPXPNOREMPORTSTATUSRT3+4
#define LLDPXPNOREMPORTMRPUUID  LLDPXPNOREMPORTNOS+4
#define LLDPXPNOREMPORTMRRTSTATUS   LLDPXPNOREMPORTMRPUUID+4
#define LLDPXPNOREMPORTPTCPMASTER   LLDPXPNOREMPORTMRRTSTATUS+4
#define LLDPXPNOREMPORTPTCPSUBDOMAINUUID    LLDPXPNOREMPORTPTCPMASTER+4
#define LLDPXPNOREMPORTPTCPIRDATAUUID   LLDPXPNOREMPORTPTCPSUBDOMAINUUID+4
#define LLDPXPNOREMPORTMODERT3  LLDPXPNOREMPORTPTCPIRDATAUUID+4
#define LLDPXPNOREMPORTPERIODLENGTH LLDPXPNOREMPORTMODERT3+4
#define LLDPXPNOREMPORTPERIODVALIDITY   LLDPXPNOREMPORTPERIODLENGTH+4
#define LLDPXPNOREMPORTREDOFFSET    LLDPXPNOREMPORTPERIODVALIDITY+4
#define LLDPXPNOREMPORTREDVALIDITY  LLDPXPNOREMPORTREDOFFSET+4
#define LLDPXPNOREMPORTORANGEOFFSET LLDPXPNOREMPORTREDVALIDITY+4
#define LLDPXPNOREMPORTORANGEVALIDITY   LLDPXPNOREMPORTORANGEOFFSET+4
#define LLDPXPNOREMPORTGREENOFFSET  LLDPXPNOREMPORTORANGEVALIDITY+4
#define LLDPXPNOREMPORTGREENVALIDITY    LLDPXPNOREMPORTGREENOFFSET+4
#define LLDPXPNOREMPORTSTATUSRT3PREAMBLESHORTENING	LLDPXPNOREMPORTGREENVALIDITY+4
#define LLDPXPNOREMPORTSTATUSRT3FRAGMENTATION	LLDPXPNOREMPORTSTATUSRT3PREAMBLESHORTENING+4

/* tokens for 'lldpXdot3PortConfigEntry' group */
#define LLDPXDOT3PORTCONFIGTLVSTXENABLE 0

/* tokens for 'lldpXdot3LocPortEntry' group */
#define LLDPXDOT3LOCPORTAUTONEGSUPPORTED    0
#define LLDPXDOT3LOCPORTAUTONEGENABLED  LLDPXDOT3LOCPORTAUTONEGSUPPORTED+4
#define LLDPXDOT3LOCPORTAUTONEGADVERTISEDCAP    LLDPXDOT3LOCPORTAUTONEGENABLED+4
#define LLDPXDOT3LOCPORTOPERMAUTYPE LLDPXDOT3LOCPORTAUTONEGADVERTISEDCAP+4

/* tokens for 'lldpXdot3LocPowerEntry' group */
#define LLDPXDOT3LOCPOWERPORTCLASS  0
#define LLDPXDOT3LOCPOWERMDISUPPORTED   LLDPXDOT3LOCPOWERPORTCLASS+4
#define LLDPXDOT3LOCPOWERMDIENABLED LLDPXDOT3LOCPOWERMDISUPPORTED+4
#define LLDPXDOT3LOCPOWERPAIRCONTROLABLE    LLDPXDOT3LOCPOWERMDIENABLED+4
#define LLDPXDOT3LOCPOWERPAIRS  LLDPXDOT3LOCPOWERPAIRCONTROLABLE+4
#define LLDPXDOT3LOCPOWERCLASS  LLDPXDOT3LOCPOWERPAIRS+4

/* tokens for 'lldpXdot3LocLinkAggEntry' group */
#define LLDPXDOT3LOCLINKAGGSTATUS   0
#define LLDPXDOT3LOCLINKAGGPORTID   LLDPXDOT3LOCLINKAGGSTATUS+4

/* tokens for 'lldpXdot3LocMaxFrameSizeEntry' group */
#define LLDPXDOT3LOCMAXFRAMESIZE    0

/* tokens for 'lldpXdot3RemPortEntry' group */
#define LLDPXDOT3REMPORTAUTONEGSUPPORTED    0
#define LLDPXDOT3REMPORTAUTONEGENABLED  LLDPXDOT3REMPORTAUTONEGSUPPORTED+4
#define LLDPXDOT3REMPORTAUTONEGADVERTISEDCAP    LLDPXDOT3REMPORTAUTONEGENABLED+4
#define LLDPXDOT3REMPORTOPERMAUTYPE LLDPXDOT3REMPORTAUTONEGADVERTISEDCAP+4

/* tokens for 'lldpXdot3RemPowerEntry' group */
#define LLDPXDOT3REMPOWERPORTCLASS  0
#define LLDPXDOT3REMPOWERMDISUPPORTED   LLDPXDOT3REMPOWERPORTCLASS+4
#define LLDPXDOT3REMPOWERMDIENABLED LLDPXDOT3REMPOWERMDISUPPORTED+4
#define LLDPXDOT3REMPOWERPAIRCONTROLABLE    LLDPXDOT3REMPOWERMDIENABLED+4
#define LLDPXDOT3REMPOWERPAIRS  LLDPXDOT3REMPOWERPAIRCONTROLABLE+4
#define LLDPXDOT3REMPOWERCLASS  LLDPXDOT3REMPOWERPAIRS+4

/* tokens for 'lldpXdot3RemLinkAggEntry' group */
#define LLDPXDOT3REMLINKAGGSTATUS   0
#define LLDPXDOT3REMLINKAGGPORTID   LLDPXDOT3REMLINKAGGSTATUS+4

/* tokens for 'lldpXdot3RemMaxFrameSizeEntry' group */
#define LLDPXDOT3REMMAXFRAMESIZE    0

/* tokens for 'lldpXdot1ConfigPortVlanEntry' group */
#define LLDPXDOT1CONFIGPORTVLANTXENABLE 0

/* tokens for 'lldpXdot1ConfigVlanNameEntry' group */
#define LLDPXDOT1CONFIGVLANNAMETXENABLE 0

/* tokens for 'lldpXdot1ConfigProtoVlanEntry' group */
#define LLDPXDOT1CONFIGPROTOVLANTXENABLE    0

/* tokens for 'lldpXdot1ConfigProtocolEntry' group */
#define LLDPXDOT1CONFIGPROTOCOLTXENABLE 0

/* tokens for 'lldpXdot1LocEntry' group */
#define LLDPXDOT1LOCPORTVLANID  0

/* tokens for 'lldpXdot1LocProtoVlanEntry' group */
#define LLDPXDOT1LOCPROTOVLANID 0
#define LLDPXDOT1LOCPROTOVLANSUPPORTED  LLDPXDOT1LOCPROTOVLANID+4
#define LLDPXDOT1LOCPROTOVLANENABLED    LLDPXDOT1LOCPROTOVLANSUPPORTED+4

/* tokens for 'lldpXdot1LocVlanNameEntry' group */
#define LLDPXDOT1LOCVLANID  0
#define LLDPXDOT1LOCVLANNAME    LLDPXDOT1LOCVLANID+4

/* tokens for 'lldpXdot1LocProtocolEntry' group */
#define LLDPXDOT1LOCPROTOCOLINDEX   0
#define LLDPXDOT1LOCPROTOCOLID  LLDPXDOT1LOCPROTOCOLINDEX+4

/* tokens for 'lldpXdot1RemEntry' group */
#define LLDPXDOT1REMPORTVLANID  0

/* tokens for 'lldpXdot1RemProtoVlanEntry' group */
#define LLDPXDOT1REMPROTOVLANID 0
#define LLDPXDOT1REMPROTOVLANSUPPORTED  LLDPXDOT1REMPROTOVLANID+4
#define LLDPXDOT1REMPROTOVLANENABLED    LLDPXDOT1REMPROTOVLANSUPPORTED+4

/* tokens for 'lldpXdot1RemVlanNameEntry' group */
#define LLDPXDOT1REMVLANID  0
#define LLDPXDOT1REMVLANNAME    LLDPXDOT1REMVLANID+4

/* tokens for 'lldpXdot1RemProtocolEntry' group */
#define LLDPXDOT1REMPROTOCOLINDEX   0
#define LLDPXDOT1REMPROTOCOLID  LLDPXDOT1REMPROTOCOLINDEX+4

/* prototypes for "var_" routines in variables table.
Simply delete any that aren't used */

U_CHAR * var_lldpConfiguration(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpPortConfigEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpConfigManAddrEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpStatistics(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpStatsTxPortEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpStatsRxPortEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpLocalSystemData(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpLocPortEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpLocManAddrEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpRemEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpRemManAddrEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpRemUnknownTLVEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpRemOrgDefInfoEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXPnoConfigEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXPnoLocEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXPnoRemEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot3PortConfigEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot3LocPortEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot3LocPowerEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpXdot3LocLinkAggEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot3LocMaxFrameSizeEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpXdot3RemPortEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpXdot3RemPowerEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot3RemLinkAggEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpXdot3RemMaxFrameSizeEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR * var_lldpXdot1ConfigPortVlanEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1ConfigVlanNameEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1ConfigProtoVlanEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1ConfigProtocolEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1LocEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1LocProtoVlanEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1LocVlanNameEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1LocProtocolEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1RemEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1RemProtoVlanEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1RemVlanNameEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);

U_CHAR *  var_lldpXdot1RemProtocolEntry(
    struct snmp_variable * vp,
    OHA_OID* name, int * len, int exact,
    int * var_len);


/* Recommended mib tables. If you edit these, be sure
to correct the values of the corrosponding tokens above.*/

/* MIB table for 'lldpConfiguration' group */

struct lldpConfiguration_mib
{
    LSA_INT32  lldpMessageTxInterval;  /* UNITS:       "seconds"M */
    LSA_INT32  lldpMessageTxHoldMultiplier;
    LSA_INT32  lldpReinitDelay;    /* UNITS:       "seconds"M */
    LSA_INT32  lldpTxDelay;    /* UNITS:       "seconds"M */
    LSA_INT32  lldpNotificationInterval;   /* UNITS:       "seconds"M */
};

/* MIB table for 'lldpPortConfigEntry' group */

struct lldpPortConfigEntry_mib
{
    LSA_INT32  lldpPortConfigPortNum;
    LSA_INT32  lldpPortConfigAdminStatus;
    LSA_INT32  lldpPortConfigNotificationEnable;
    void  * lldpPortConfigTLVsTxEnable; /* 32 bit ptr */
};

/* MIB table for 'lldpConfigManAddrEntry' group */

/* This table augments the table lldpLocManAddrEntry */
struct lldpConfigManAddrEntry_mib
{
    struct  lldpLocManAddrEntry_mib *basetbl;   /* ptr to base table */
    void  * lldpConfigManAddrPortsTxEnable; /* 32 bit ptr */
};

/* MIB table for 'lldpStatistics' group */

struct lldpStatistics_mib
{
    U_LONG  lldpStatsRemTablesLastChangeTime;
    U_LONG  lldpStatsRemTablesInserts;  /* UNITS:       "table entries"M */
    U_LONG  lldpStatsRemTablesDeletes;  /* UNITS:       "table entries"M */
    U_LONG  lldpStatsRemTablesDrops;    /* UNITS:       "table entries"M */
    U_LONG  lldpStatsRemTablesAgeouts;
};

/* MIB table for 'lldpStatsTxPortEntry' group */

struct lldpStatsTxPortEntry_mib
{
    LSA_INT32  lldpStatsTxPortNum;
    U_LONG  lldpStatsTxPortFramesTotal;
};

/* MIB table for 'lldpStatsRxPortEntry' group */

struct lldpStatsRxPortEntry_mib
{
    LSA_INT32  lldpStatsRxPortNum;
    U_LONG  lldpStatsRxPortFramesDiscardedTotal;
    U_LONG  lldpStatsRxPortFramesErrors;
    U_LONG  lldpStatsRxPortFramesTotal;
    U_LONG  lldpStatsRxPortTLVsDiscardedTotal;
    U_LONG  lldpStatsRxPortTLVsUnrecognizedTotal;
    U_LONG  lldpStatsRxPortAgeoutsTotal;
};

/* MIB table for 'lldpLocalSystemData' group */

struct lldpLocalSystemData_mib
{
    LSA_INT32  lldpLocChassisIdSubtype;
    void  * lldpLocChassisId;   /* 32 bit ptr */
    void  * lldpLocSysName; /* 32 bit ptr */
    void  * lldpLocSysDesc; /* 32 bit ptr */
    void  * lldpLocSysCapSupported; /* 32 bit ptr */
    void  * lldpLocSysCapEnabled;   /* 32 bit ptr */
};

/* MIB table for 'lldpLocPortEntry' group */

struct lldpLocPortEntry_mib
{
    LSA_INT32  lldpLocPortNum;
    LSA_INT32  lldpLocPortIdSubtype;
    void  * lldpLocPortId;  /* 32 bit ptr */
    void  * lldpLocPortDesc;    /* 32 bit ptr */
};

/* MIB table for 'lldpLocManAddrEntry' group */

struct lldpLocManAddrEntry_mib
{
    LSA_INT32  lldpLocManAddrSubtype;
    void  * lldpLocManAddr; /* 32 bit ptr */
    LSA_INT32  lldpLocManAddrLen;
    LSA_INT32  lldpLocManAddrIfSubtype;
    LSA_INT32  lldpLocManAddrIfId;
    OHA_OID  *  lldpLocManAddrOID;  /* 32 bit ptr */
};

/* MIB table for 'lldpRemEntry' group */

struct lldpRemEntry_mib
{
    U_LONG  lldpRemTimeMark;
    LSA_INT32  lldpRemLocalPortNum;
    LSA_INT32  lldpRemIndex;
    LSA_INT32  lldpRemChassisIdSubtype;
    void  * lldpRemChassisId;   /* 32 bit ptr */
    LSA_INT32  lldpRemPortIdSubtype;
    void  * lldpRemPortId;  /* 32 bit ptr */
    void  * lldpRemPortDesc;    /* 32 bit ptr */
    void  * lldpRemSysName; /* 32 bit ptr */
    void  * lldpRemSysDesc; /* 32 bit ptr */
    void  * lldpRemSysCapSupported; /* 32 bit ptr */
    void  * lldpRemSysCapEnabled;   /* 32 bit ptr */
};

/* MIB table for 'lldpRemManAddrEntry' group */

struct lldpRemManAddrEntry_mib
{
    LSA_INT32  lldpRemManAddrSubtype;
    void  * lldpRemManAddr; /* 32 bit ptr */
    LSA_INT32  lldpRemManAddrIfSubtype;
    LSA_INT32  lldpRemManAddrIfId;
    OHA_OID  *  lldpRemManAddrOID;  /* 32 bit ptr */
};

/* MIB table for 'lldpRemUnknownTLVEntry' group */

struct lldpRemUnknownTLVEntry_mib
{
    LSA_INT32  lldpRemUnknownTLVType;
    void  * lldpRemUnknownTLVInfo;  /* 32 bit ptr */
};

/* MIB table for 'lldpRemOrgDefInfoEntry' group */

struct lldpRemOrgDefInfoEntry_mib
{
    void  * lldpRemOrgDefInfoOUI;   /* 32 bit ptr */
    LSA_INT32  lldpRemOrgDefInfoSubtype;
    LSA_INT32  lldpRemOrgDefInfoIndex;
    void  * lldpRemOrgDefInfo;  /* 32 bit ptr */
};

/* MIB table for 'lldpXPnoConfigSPDEntry' group */

/* This table augments the table lldpPortConfigEntry */
struct lldpXPnoConfigEntry_mib
{
    struct  lldpPortConfigEntry_mib *basetbl;   /* ptr to base table */
    LSA_INT32  lldpXPnoConfigSPDTxEnable;
    LSA_INT32  lldpXPnoConfigPortStatusTxEnable;
    LSA_INT32  lldpXPnoConfigAliasTxEnable;
    LSA_INT32  lldpXPnoConfigMrpTxEnable;
    LSA_INT32  lldpXPnoConfigPtcpTxEnable;
};

/* MIB table for 'lldpXPnoLocSPDEntry' group */

struct lldpXPnoLocEntry_mib
{
    U_LONG  lldpXPnoLocLPDValue;        /* UNITS: "ns"M */
    U_LONG  lldpXPnoLocPortTxDValue;    /* UNITS: "ns"M */
    U_LONG  lldpXPnoLocPortRxDValue;    /* UNITS: "ns"M */
    LSA_INT32  lldpXPnoLocPortStatusRT2;
    LSA_INT32  lldpXPnoLocPortStatusRT3;
    void  * lldpXPnoLocPortNoS; /* 32 bit ptr */
    void  * lldpXPnoLocPortMrpUuId; /* 32 bit ptr */
    LSA_INT32  lldpXPnoLocPortMrrtStatus;
    void  * lldpXPnoLocPortPtcpMaster;  /* 32 bit ptr */
    void  * lldpXPnoLocPortPtcpSubdomainUUID;   /* 32 bit ptr */
    void  * lldpXPnoLocPortPtcpIRDataUUID;  /* 32 bit ptr */
};

/* MIB table for 'lldpXPnoRemSPDEntry' group */

struct lldpXPnoRemEntry_mib
{
    U_LONG  lldpXPnoRemLPDValue;        /* UNITS: "ns"M */
    U_LONG  lldpXPnoRemPortTxDValue;    /* UNITS: "ns"M */
    U_LONG  lldpXPnoRemPortRxDValue;    /* UNITS: "ns"M */
    LSA_INT32  lldpXPnoRemPortStatusRT2;
    LSA_INT32  lldpXPnoRemPortStatusRT3;
    void  * lldpXPnoRemPortNoS; /* 32 bit ptr */
    void  * lldpXPnoRemPortMrpUuId; /* 32 bit ptr */
    LSA_INT32  lldpXPnoRemPortMrrtStatus;
    void  * lldpXPnoRemPortPtcpMaster;  /* 32 bit ptr */
    void  * lldpXPnoRemPortPtcpSubdomainUUID;   /* 32 bit ptr */
    void  * lldpXPnoRemPortPtcpIRDataUUID;  /* 32 bit ptr */
};


/* MIB table for 'lldpXdot3PortConfigEntry' group */

/* This table augments the table lldpPortConfigEntry */
struct lldpXdot3PortConfigEntry_mib
{
    struct  lldpPortConfigEntry_mib *basetbl;   /* ptr to base table */
    void  * lldpXdot3PortConfigTLVsTxEnable;    /* 32 bit ptr */
};

/* MIB table for 'lldpXdot3LocPortEntry' group */

struct lldpXdot3LocPortEntry_mib
{
    LSA_INT32  lldpXdot3LocPortAutoNegSupported;
    LSA_INT32  lldpXdot3LocPortAutoNegEnabled;
    void  * lldpXdot3LocPortAutoNegAdvertisedCap;   /* 32 bit ptr */
    LSA_INT32  lldpXdot3LocPortOperMauType;
};

/* MIB table for 'lldpXdot3LocPowerEntry' group */

struct lldpXdot3LocPowerEntry_mib
{
    LSA_INT32  lldpXdot3LocPowerPortClass;
    LSA_INT32  lldpXdot3LocPowerMDISupported;
    LSA_INT32  lldpXdot3LocPowerMDIEnabled;
    LSA_INT32  lldpXdot3LocPowerPairControlable;
    LSA_INT32  lldpXdot3LocPowerPairs;
    LSA_INT32  lldpXdot3LocPowerClass;
};

/* MIB table for 'lldpXdot3LocLinkAggEntry' group */

struct lldpXdot3LocLinkAggEntry_mib
{
    void  * lldpXdot3LocLinkAggStatus;  /* 32 bit ptr */
    LSA_INT32  lldpXdot3LocLinkAggPortId;
};

/* MIB table for 'lldpXdot3LocMaxFrameSizeEntry' group */

struct lldpXdot3LocMaxFrameSizeEntry_mib
{
    LSA_INT32  lldpXdot3LocMaxFrameSize;
};

/* MIB table for 'lldpXdot3RemPortEntry' group */

struct lldpXdot3RemPortEntry_mib
{
    LSA_INT32  lldpXdot3RemPortAutoNegSupported;
    LSA_INT32  lldpXdot3RemPortAutoNegEnabled;
    void  * lldpXdot3RemPortAutoNegAdvertisedCap;   /* 32 bit ptr */
    LSA_INT32  lldpXdot3RemPortOperMauType;
};

/* MIB table for 'lldpXdot3RemPowerEntry' group */

struct lldpXdot3RemPowerEntry_mib
{
    LSA_INT32  lldpXdot3RemPowerPortClass;
    LSA_INT32  lldpXdot3RemPowerMDISupported;
    LSA_INT32  lldpXdot3RemPowerMDIEnabled;
    LSA_INT32  lldpXdot3RemPowerPairControlable;
    LSA_INT32  lldpXdot3RemPowerPairs;
    LSA_INT32  lldpXdot3RemPowerClass;
};

/* MIB table for 'lldpXdot3RemLinkAggEntry' group */

struct lldpXdot3RemLinkAggEntry_mib
{
    void  * lldpXdot3RemLinkAggStatus;  /* 32 bit ptr */
    LSA_INT32  lldpXdot3RemLinkAggPortId;
};

/* MIB table for 'lldpXdot3RemMaxFrameSizeEntry' group */

struct lldpXdot3RemMaxFrameSizeEntry_mib
{
    LSA_INT32  lldpXdot3RemMaxFrameSize;
};

/* MIB table for 'lldpXdot1ConfigPortVlanEntry' group */

/* This table augments the table lldpPortConfigEntry */
struct lldpXdot1ConfigPortVlanEntry_mib
{
    struct  lldpPortConfigEntry_mib *basetbl;   /* ptr to base table */
    LSA_INT32  lldpXdot1ConfigPortVlanTxEnable;
};

/* MIB table for 'lldpXdot1ConfigVlanNameEntry' group */

/* This table augments the table lldpXdot1LocVlanNameEntry */
struct lldpXdot1ConfigVlanNameEntry_mib
{
    struct  lldpXdot1LocVlanNameEntry_mib *basetbl; /* ptr to base table */
    LSA_INT32  lldpXdot1ConfigVlanNameTxEnable;
};

/* MIB table for 'lldpXdot1ConfigProtoVlanEntry' group */

/* This table augments the table lldpXdot1LocProtoVlanEntry */
struct lldpXdot1ConfigProtoVlanEntry_mib
{
    struct  lldpXdot1LocProtoVlanEntry_mib *basetbl;    /* ptr to base table */
    LSA_INT32  lldpXdot1ConfigProtoVlanTxEnable;
};

/* MIB table for 'lldpXdot1ConfigProtocolEntry' group */

/* This table augments the table lldpXdot1LocProtocolEntry */
struct lldpXdot1ConfigProtocolEntry_mib
{
    struct  lldpXdot1LocProtocolEntry_mib *basetbl; /* ptr to base table */
    LSA_INT32  lldpXdot1ConfigProtocolTxEnable;
};

/* MIB table for 'lldpXdot1LocEntry' group */

struct lldpXdot1LocEntry_mib
{
    LSA_INT32  lldpXdot1LocPortVlanId;
};

/* MIB table for 'lldpXdot1LocProtoVlanEntry' group */

struct lldpXdot1LocProtoVlanEntry_mib
{
    LSA_INT32  lldpXdot1LocProtoVlanId;
    LSA_INT32  lldpXdot1LocProtoVlanSupported;
    LSA_INT32  lldpXdot1LocProtoVlanEnabled;
};

/* MIB table for 'lldpXdot1LocVlanNameEntry' group */

struct lldpXdot1LocVlanNameEntry_mib
{
    LSA_INT32  lldpXdot1LocVlanId;
    void  * lldpXdot1LocVlanName;   /* 32 bit ptr */
};

/* MIB table for 'lldpXdot1LocProtocolEntry' group */

struct lldpXdot1LocProtocolEntry_mib
{
    LSA_INT32  lldpXdot1LocProtocolIndex;
    void  * lldpXdot1LocProtocolId; /* 32 bit ptr */
};

/* MIB table for 'lldpXdot1RemEntry' group */

struct lldpXdot1RemEntry_mib
{
    LSA_INT32  lldpXdot1RemPortVlanId;
};

/* MIB table for 'lldpXdot1RemProtoVlanEntry' group */

struct lldpXdot1RemProtoVlanEntry_mib
{
    LSA_INT32  lldpXdot1RemProtoVlanId;
    LSA_INT32  lldpXdot1RemProtoVlanSupported;
    LSA_INT32  lldpXdot1RemProtoVlanEnabled;
};

/* MIB table for 'lldpXdot1RemVlanNameEntry' group */

struct lldpXdot1RemVlanNameEntry_mib
{
    LSA_INT32  lldpXdot1RemVlanId;
    void  * lldpXdot1RemVlanName;   /* 32 bit ptr */
};

/* MIB table for 'lldpXdot1RemProtocolEntry' group */

struct lldpXdot1RemProtocolEntry_mib
{
    LSA_INT32  lldpXdot1RemProtocolIndex;
    void  * lldpXdot1RemProtocolId; /* 32 bit ptr */
};



/* The following structure is the MRP Redundancy Protocol MIB defined by the IEC
                standard 62439.

 -- Oid: 1.0.62439
 -- Module : IEC-62439-1-MIB
 -- Node: iec62439

*/

/* tokens for 'mrpDomainEntry' group */
#define MRPDOMAININDEX	0
#define MRPDOMAINID	MRPDOMAININDEX+4
#define MRPDOMAINNAME	MRPDOMAINID+4
#define MRPDOMAINADMINROLE	MRPDOMAINNAME+4
#define MRPDOMAINOPERROLE	MRPDOMAINADMINROLE+4
#define MRPDOMAINRINGPORT1	MRPDOMAINOPERROLE+4
#define MRPDOMAINRINGPORT1STATE	MRPDOMAINRINGPORT1+4
#define MRPDOMAINRINGPORT2	MRPDOMAINRINGPORT1STATE+4
#define MRPDOMAINRINGPORT2STATE	MRPDOMAINRINGPORT2+4
#define MRPDOMAINSTATE	MRPDOMAINRINGPORT2STATE+4
#define MRPDOMAINERROR	MRPDOMAINSTATE+4
#define MRPDOMAINBLOCKED	MRPDOMAINERROR+4
#define MRPDOMAINVLANID	MRPDOMAINBLOCKED+4
#define MRPDOMAINMANAGERPRIORITY	MRPDOMAINVLANID+4
#define MRPDOMAINRINGOPENCOUNT	MRPDOMAINMANAGERPRIORITY+4
#define MRPDOMAINLASTRINGOPENCHANGE	MRPDOMAINRINGOPENCOUNT+4
#define MRPDOMAINROUNDTRIPDELAYMAX	MRPDOMAINLASTRINGOPENCHANGE+4
#define MRPDOMAINROUNDTRIPDELAYMIN	MRPDOMAINROUNDTRIPDELAYMAX+4
#define MRPDOMAINRESETROUNDTRIPDELAYS	MRPDOMAINROUNDTRIPDELAYMIN+4
#define MRPDOMAINMRMREACTONLINKCHANGE	MRPDOMAINRESETROUNDTRIPDELAYS+4

/* prototypes for "var_" routines in variables table.
Simply delete any that aren't used */

U_CHAR *
var_mrpDomainEntry(struct snmp_variable * vp,
	OHA_OID* name, LSA_INT * len, LSA_INT exact,
	LSA_INT * var_len);



/* Recommended mib tables. If you edit these, be sure
to correct the values of the corrosponding tokens above.*/

/* MIB table for 'mrpDomainEntry' group */

struct mrpDomainEntry_mib {
	U_LONG	mrpDomainIndex;
	void  *	mrpDomainID;	/* 32 bit ptr */
	void  *	mrpDomainName;	/* 32 bit ptr */
	LSA_INT32	mrpDomainAdminRole;
	LSA_INT32	mrpDomainOperRole;
	LSA_INT32	mrpDomainRingPort1;
	LSA_INT32	mrpDomainRingPort1State;
	LSA_INT32	mrpDomainRingPort2;
	LSA_INT32	mrpDomainRingPort2State;
	void  *	mrpDomainState;	/* 32 bit ptr */
	void  *	mrpDomainError;	/* 32 bit ptr */
	LSA_INT32	mrpDomainBlocked;
	U_LONG	mrpDomainVlanId;
	LSA_INT32	mrpDomainManagerPriority;
	U_LONG	mrpDomainRingOpenCount;
	U_LONG	mrpDomainLastRingOpenChange;
	U_LONG	mrpDomainRoundTripDelayMax;	/* UNITS: "microseconds" */
	U_LONG	mrpDomainRoundTripDelayMin;	/* UNITS: "microseconds" */
	LSA_INT32	mrpDomainResetRoundTripDelays;
	LSA_INT32	mrpDomainMRMReactOnLinkChange;
};


/* List of traps supported */
/*
extern struct trapVar nt_lldpRemTablesChange[];
extern struct trapVar nt_risingAlarm[];
extern struct trapVar nt_fallingAlarm[];
*/

/* Following is a List of new TEXTUAL CONVENTIONS defined
   in the MIBs
*/
extern struct snmp_enumList oha_en_TruthValue[] ;
extern struct snmp_enumList oha_en_RowStatus[] ;
extern struct snmp_enumList oha_en_StorageType[] ;
extern struct snmp_enumList oha_en_SnmpSecurityLevel[] ;
extern struct snmp_enumList oha_en_EntryStatus[] ;
extern struct snmp_enumList oha_en_AddressFamilyNumbers[] ;
extern struct snmp_enumList oha_en_LldpChassisIdSubtype[] ;
extern struct snmp_enumList oha_en_LldpPortIdSubtype[] ;
extern struct snmp_enumList oha_en_LldpManAddrIfSubtype[] ;
extern struct snmp_enumList oha_en_LldpSystemCapabilitiesMap[] ;
extern struct snmp_enumList oha_en_EnabledStatus[] ;
extern struct snmp_enumList oha_en_LldpPowerPortClass[] ;
extern struct snmp_enumList oha_en_LldpLinkAggStatusMap[] ;


#endif /* LLDP_MIB_H */
